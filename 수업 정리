소프트웨어란 프로그램뿐만 아니라 그 이상의 것도 포함하는 포괄적인 개념이다.

소프트웨어의 분류
1. 관리 소프트웨어
  자료를 받아들여 가공 후 정보를 제공하는 소프트웨어로 주로 DB에 자료를 저장 후 검색을 통해 사용자가 원하는 형태로 정보를 제공한다.
2.제어 소프트웨어
  각종 센서를 이용하거나 기기들의 동작을 제어하는 소프트웨어
3. 임베디드 소프트웨어
  장비나 기기에 내장된 형태의 소프트웨어(가전제품 내의 소프트웨어, 공정제어 시스템 내의 소프트웨어)
  
소프트웨어의 분류(공급방식에 따른 유형)
1. 주문형 소프트웨어
  고객의 수요를 만족하기 위해 개발된 소프트웨어
2. 패키지형 소프트웨어
  공개된 시장에서 판매하는 것으로 범용 소프트웨어라고도 한다.
  주문형 대비 저렴하고 신뢰도가 높지만, 특정 기관의 요구에 맞지 않을 수 있다.
3. 임베디드 소프트웨어
  변경이 어렵고 개발방법과 프로세스가 달라 별도 분야로 취급한다.
  
소프트웨어의 분류(자료 처리방식에 따른 유형)
1. 리얼타임 소프트웨어
  제어, 모니터링 소프트웨어로 신속한 반응과 안정성 확보가 매우 중요하다.
2. 자료처리 소프트웨어
  비즈니스업무 처리에 사용되며 자료의 정확성과 보안이 관건으로 일괄처리 방식이다.
3. 리얼타임과 자료처리를 동시에 지닌 소프트웨어
  전화통신시스템은 전화통신은 리얼타임 방식, 청구는 자료처리 방식이다.

특징
1. 제조가 아니라 개발이다.
  소프트웨어 개발 과정은 제조와 달리 개인 능력에 따라서 차이가 크다.
2. 소모가 아닌 품질 저하가 일어난다.
  하드웨어와는 달리 닳지 않으며 시간이 지나도 고장 빈도가 높지 않다. 사용 시작 단계부터 사용자의 요구가 계속 발생한다.

소프트웨어 당면 과제
1. 개발의 느린 발전 속도
  하드웨어의 발전속도보다 소프트웨어 발전 속도가 더 느리다.
2. 새로운 소프트웨어에 대한 사용자 요구의 증가
  하드웨어와 소프트웨어의 개발 방법의 근본적인 차이 때문에 소프트웨어의 발전 속도가 미처 따라가지 못한다.
  해결 방법(CBD 개발 방법론)
  CBD 개발 방법론이란 컴포넌트의 재사용을 통해 개발 생산성 향상, 개발기간 단축 및 신뢰성 높은 소프트웨어를 생산할 목적으로 컴포넌트의 생성, 조립하여 소프트웨어를 개발하는 방법론이다.
3. 관리 기술의 부분적 활용
  소프트웨어 개발에도 관리가 필요하다.
  PMBOK를 활용한 프로젝트 관리가 필요하다. (PMBOK란 프로젝트 관리 지식 체계)
  
소프트웨어 공학
학문적 정의는 품질 좋은 소프트웨어를 경제적으로 개발하기 위해 계획을 세우고 개발하며, 유지 및 관리하는 전 과정에서
공학, 과학 및 수학적 원리와 방법을 적용해 필요한 이론과 기술 및 도구들에 관해 연구하는 학문이다.

SDLC(Software Development Life Cycle) 소프트웨어 개발 생명주기
소프트웨어를 만들기 위해 계획단계에서 유지보수 단계에 이르기까지 일어나는 일련의 과정으로 계획, 분석, 설계, 구현, 테스트, 유지보수로 이루어져있다.

소프트웨어 개발 프로세스
좁은 의미로는 소프트웨어 제품을 개발할때 필요한 절차나 과정을 의미하고
넓은 의미로는 작업을 수행하는 데 필요한 방법고 도구를 비롯해 개발과 관련된 절차를 따라 작업을 수행하는 참여자를 포함하낟.

소프트웨어 개발 프로세스 모델
정의 : 소프트웨어를 어떻게 개발할 것인가에 대한 전체 흐름을 체계화한 개념으로 개발 계획 수립부터 최종 폐기까지 전 과정을 순차적으로 다룬다.

목적 : 주어진 예산과 자원으로 개발하고 관리하는 방법을 구체적으로 정의하며 고품질의 소프트웨어 제품을 만드는 것이 목적이다.

역할 : 전체적인 기본 골격을 세워 일정 계획을 수립할 수 있고, 개발 비용 산정뿐 아니라 여러 자원을 산정하고 분배할 수 있으며
참여자 간 의사소통 기준을 정하고 용어의 표준화를 가능하게 한다.

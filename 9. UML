유스케이스 다이어그램은 시스템이 제공하는 기능을 나타내는 유스케이스와 기능을 사용하는 사용자인 액터로 이 둘의 관계로 나타낸다.

액터의 종류
1. 사용자 액터 : 시스템을 사용하는 사람
2. 시스템 액터 : 해당 프로젝트의 개발범위에는 속하지 않지만 데이터를 주고받는 등 서로 연동되는 또 다른 시스템
3. 주요 액터 : 시스템에게 작업의 실행을 요구하는 능동적 입장의 액터
4. 보조 액터 : 유스케이스로부터 요청을 받거나 메시지를 전달받아 수동적으로 작업을 하는 액
5. 프록시 액터 : 액터와 시스템의 중간 위치에서 무언가를 대신해주는 액터

유스케이스란 사용자가 시스템을 통해 사용하고 싶은 기능으로 유스케이스가 모여 하나의 서브시스템을 이루고 이 서브시스템이 모여 개발 시스템이 된다.

관계
1. 액터 > 유스케이스 관계
액터와 유스케이스는 연관관계로 방향성을 갖는 실선으로 표현한다.
2. 유스케이스 > 액터 관계
유스케이스 수행 결과를 알려줄 때는 방향성을 갖는 실선으로 표현한다.
3. 액터의 일반화 관계
4. 액터 간의 연관관계
5. 포함 관계 : 유스케이스의 일부 기능이 다른 유스케이스에서도 공통으로 필요하다면 이를 별도로 만든 뒤 호출해 사용하는 것
6. 확장 관계 : 기준 유스케이스 쪽으로 점선 화살표로 표현한다.

클래스 다이어그램은 소프트웨어의 기본 구성 단위인 시스템에서 사용하는 클래스를 정의하는 다이어그램이다.
순차 다이어그램은 실행 시점네 객체들이 어떻게 상호 동작하는지를 메시지 순서에 초점을 맞춰 나타낸 다이어그램이다.
활동 다이어그램은 흐름도와는 비슷하나 객체의 행위를 나타낸다는 점에서 다른 다이어그램이다.
상태 다이어그램은 이벤트 발생이나 시간의 흐름에 따라 바뀌는 객체의 상태를 나타내는 다이어그램이다.
컴포넌트 다이어그램은 구현 관점에서 정적 모델링을 할 때 사용하는 다이어그램이다.
배치 다이어그램은 하드웨어 자원을 명시적으로 정의해 시스템의 물리적인 요소를 모델링하고 노드 간의 관계를 나타낸다.
